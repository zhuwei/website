---
ru:
  pages:
    about_us:
      title: О нас
    admin:
      dashboard:
        title: Панель администратора
    bandwidth_calculator:
      title: Калькулятор пропускной способности
    firmware_partitions_calculation:
      end_address: Конечный адрес
      flash_size_mb: Размер флешки, МБ
      mtd_name: Имя устройства МПД
      offset: Начальное смещение, десятичное или шестнадцатеричное
      partition_name: Имя раздела %{number}
      partition_size: Размер раздела %{number}, КБ
      recalculate: Пересчитать
      size_hex: Шестнадцатеричный размер, байт
      start_address: Начальный адрес
      title: Расчет разделов прошивки
    high_resolution_timer:
      reload_to_reset: Время указано в миллисекундах. Перезагрузите страницу, чтобы сбросить счетчик.
      title: Таймер высокого разрешения
    introduction:
      title: Вступление
    majestic_endpoints:
      aac: Аудиопоток AAC.
      accepts_post: Принимает POST-запросы с аудиофайлом в качестве параметра.
      alaw: Аудиопоток, сжатый по закону А.
      audio: Аудио
      dng: Снимок в формате Adobe DNG (сырой).
      fmp4: Видеопоток fMP4.
      footnote_1: Только SoC HiSilicon и Goke.
      footnote_2: Только HiSilicon SoC v2 и выше.
      footnote_3_html: Например, <i>ffplay -ar 48000 -ac 1 -f s16le http://192.168.1.10/audio.pcm</i>
      footnote_4_html: Например, <i>http://192.168.1.10/image.jpg?width=640&height=480&qfactor=50&color2gray=1&crop=80x32x512x400</i>
      g711: Аудиопоток G.711 A-law.
      heif: Снимок в формате HEIF.
      hls: Прямая трансляция HLS в веб-браузере.
      images: Фотографии
      jpeg: Снимок в формате JPEG.
      jpeg_params1: ширина, высота - размер результирующего изображения
      jpeg_params2: qfactor - фактор качества JPEG (1-99)
      jpeg_params3: color2gray - преобразовать в оттенки серого
      jpeg_params4: кадрировать - обрезать полученное изображение до размера 16x16x320x320
      majestic_json: Актуальная конфигурация Majestic в формате JSON.
      mjpeg: Видеопоток MJPEG.
      mjpeg_player: Прямая трансляция MJPEG и MP3 в веб-браузере.
      monitoring: Мониторинг
      more_examples_html: Другие примеры доступны <a href="https://github.com/OpenIPC/wiki/blob/master/en/majestic-streamer.md">в нашей вики</a> .
      mp3: Аудиопоток MP3.
      night: Ночной API
      night_off: Выключите ночной режим.
      night_on: Включите ночной режим.
      night_toggle: Переключить текущий ночной режим.
      optional_params: Дополнительные параметры
      opus: Аудиопоток Opus.
      play_on_speaker: Воспроизведение аудиофайла на динамике камеры.
      prometheus_html: Экспортер узлов для <a href="https://prometheus.io/">Prometheus</a>.
      raw_pcm: Необработанный аудиопоток PCM.
      rtsp0: Основной поток RTSP (video0).
      rtsp1: Подпоток RTSP (видео1).
      title: Величественные конечные точки
      ulaw: Аудиопоток, сжатый по закону μ.
      video: видео
      webrtc: Прямая трансляция WebRTC в веб-браузере.
      yuv420: Снимок в формате YUV420.
    our_channels:
      paragraph1_html: Мы настоятельно рекомендуем вам установить <a href="https://telegram.org/">мессенджер Telegram</a> для вашей платформы и общаться непосредственно в наших каналах в Telegram.
      title: Наши каналы
    our_projects:
      burn_info: Инструмент с открытым исходным кодом для разблокировки устройств HiSilicon.
      community: Что-то связанное с OpenIPC. Контент, создаваемый пользователями.
      coupler_info: Инструмент, позволяющий плавно перейти с предустановленной проприетарной прошивки производителя IP-камеры на прошивку OpenIPC. Никаких специальных навыков не требуется.
      exipcam_info: Обозреватель устройств XM. Утилита для ремонта IPcam
      exipcam_info_extra: Русский интерфейс. Работает на Windows, Linux через Wine.
      firmware_info: Святой Грааль сообщества. Универсальная прошивка для IP-камер для замены проприетарных, устаревших и часто небезопасных предустановленных прошивок поставщиков.
      hisitrace_info: Утилита для запуска Софии из XM в нестандартной среде.
      ipcamdms_info: Система управления IP-камерами
      ipcamdms_info_extra: Русский интерфейс. Работает на Windows, Linux через Wine.
      ipctool_info: Инспектор оборудования IP-камеры на стероидах. Этот инструмент не только определит процессор вашей камеры, сенсор, микросхему флэш-памяти, но также поможет вам создать резервную копию оригинальной прошивки и многое другое.
      majestic_info: Универсальный стример с IP-камерой. Этот проект является основной частью прошивки OpenIPC. Хотя на данном этапе разработки это не полностью открытый исходный код, мы рассматриваем возможность открытия кодовой базы, когда проект достаточно созреет и получит достаточно средств для открытой разработки.
      mini_info: Стример с IP-камерой с открытым исходным кодом. Думайте об этом как о младшем брате Маджестик.
      motors_info: Различный код для управления оборудованием двигателя.
      openhisi_info: SDK с открытым исходным кодом для SoC Hisilicon.
      openxm_info: SDK с открытым исходным кодом для SoC Xiongmai.
      printables_info: Модели для 3D-печати с тегом «openipc».
      smolrtsp_info: Простая серверная библиотека RTSP 1.0, предназначенная для встроенных устройств, таких как IP-камеры. Он поддерживает как TCP, так и UDP, допускает любой формат полезной нагрузки и предоставляет удобный и гибкий API.
      subtitle1: Основные проекты
      subtitle2: Зонтичные проекты OpenIPC
      subtitle3: Проекты сообщества OpenIPC
      title: Наши проекты
      umbrella_info: OpenIPC также является зонтичным брендом для других небольших проектов, которые являются полезными компонентами нашей экосистемы. Мы приветствуем всех желающих внести свой вклад в проект любым удобным для них способом!
      venc_info: Видеостример для IP-камер с использованием Goke SoC, ориентированный в первую очередь на FPV.
      webui_info: Веб-интерфейс для прошивки OpenIPC. Написано на Ясене и слезах разработчика.
      yamlcli_info: Простой консольный инструмент YAML.
    our_team:
      contributors_link: Список всех участников GitHub
      paragraph1_html: 'OpenIPC — это проект с открытым исходным кодом, развиваемый сообществом: множество людей вносят свой вклад в код проекта, за что им огромное спасибо! Но есть основная команда разработчиков, которые усердно работают над расширением списка <a href="/supported-hardware">поддерживаемых платформ</a>, наращиванием функциональности и повышением стабильности встроенного ПО, проверкой присланного кода и координацией усилий сообщества. Познакомьтесь с членами команды и их спецализацией:'
      title: Наша команда
    stages_of_firmware_development:
      done_alt: 'Изображение: этап ВЫПОЛНЕНО'
      done_info: Сделано и сделано! Загрузчик загружается, загружается Linux, стример может транслировать видео и создавать моментальные снимки. Вы можете открыть рабочую платформу для доработок и дальнейших улучшений. Тем не менее, мы все еще ожидаем отзывов и исправлений от вас, ребята.
      hlp_alt: 'Изображение: этап HLP'
      hlp_info: Требуется помощь. У нас есть оборудование, у нас есть SDK, основные вещи изучены и сделаны. Но мы застряли. Именно здесь мы ищем помощи у опытных разработчиков встраиваемых систем, чтобы преодолеть препятствия и перейти к следующему этапу.
      mvp_alt: 'Изображение: MVP этапа'
      mvp_info: Минимально жизнеспособный продукт. Базовая система построена, платформа может производить видео, по крайней мере, на основном канале, но из-за нехватки человеческих ресурсов разработка задерживается или останавливается. Финансовые вливания могут подтолкнуть разработку к финальной стадии.
      neq_alt: 'Изображение: этап NEQ'
      neq_info_html: Нет оборудования. У нас есть SDK для платформы, но у нас нет конкретного оборудования для продолжения разработки, вы можете пожертвовать его нашим ребятам из R&D (особенно старые платы, которые прошли <abbr title="Конец жизни">EOL</abbr> и больше не могут быть куплены).
      paragraph1: После приобретения SDK для новой SoC мы добавляем SoC в таблицу поддерживаемого оборудования. Мы присваиваем либо статус NEQ (Нет оборудования), если у нас нет определенных аппаратных модулей, либо статус HLP (Требуется помощь), если у нас есть оборудование, но мы ищем разработчика, который возглавил бы разработку для этой SoC. Это считается официальным началом разработки.
      paragraph2: Нет причин иметь SoC в таблице без его SDK.
      paragraph3: По мере продвижения работы над SoC его статус постепенно меняется. Сначала в RND, потом в WIP, потом дальше в MVP и, наконец, в DONE.
      rnd_alt: 'Изображение: стадия НИОКР'
      rnd_info: Стадия исследований и разработок, когда у нас уже есть SDK платформы и, может быть, даже аппаратные платы, но мы начинаем возиться с платформой, изучая ее специфику и особенности. Впереди еще много работы.
      subtitle: Типичный жизненный цикл разработки
      title: Этапы разработки прошивки
      wip_alt: 'Изображение: этап WIP'
      wip_info: Работа в процессе. Мы многое узнали об аппаратном обеспечении платформы и кодовой базе, подготовили первую общедоступную бинарную сборку и ждем первых пользователей, которые протестируют ее на своих платах и предоставят отзывы, которые помогут нам двигаться вперед.
    support_open_source:
      title: Поддержите программирование с открытым исходным кодом
    web_interface:
      title: Веб интерфейс
